// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetrolriosFraudeDetection.Data;

#nullable disable

namespace PetrolriosFraudeDetection.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605022834_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.AlertaFraude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaDeteccion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaResolucion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VentaId");

                    b.ToTable("AlertasFraude");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Estacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Estaciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Codigo = "EST-000001",
                            Nombre = "Estación Central",
                            Ubicacion = "Quito Norte"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Codigo = "EST-000002",
                            Nombre = "Estación Sur",
                            Ubicacion = "Quito Sur"
                        });
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Anulada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumeroFactura")
                        .IsUnique();

                    b.HasIndex("VentaId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CantidadRecibida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NivelFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NivelInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EstacionId");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.SensorVolumen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoSensor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EstacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("NivelFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NivelInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstacionId");

                    b.ToTable("SensoresVolumen");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Sistema",
                            Email = "admin@petrolrios.com",
                            Nombre = "Administrador",
                            PasswordHash = "hashed_password",
                            Rol = "Administrador"
                        });
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LitrosVendidos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroTransaccion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("EstacionId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.AlertaFraude", b =>
                {
                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Usuario", "Usuario")
                        .WithMany("AlertasRevisadas")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Venta", "Venta")
                        .WithMany("Alertas")
                        .HasForeignKey("VentaId");

                    b.Navigation("Usuario");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Factura", b =>
                {
                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Venta", "Venta")
                        .WithMany("Facturas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Inventario", b =>
                {
                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Estacion", "Estacion")
                        .WithMany("Inventarios")
                        .HasForeignKey("EstacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacion");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.SensorVolumen", b =>
                {
                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Estacion", "Estacion")
                        .WithMany("Sensores")
                        .HasForeignKey("EstacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacion");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Venta", b =>
                {
                    b.HasOne("PetrolriosFraudeDetection.Models.Entities.Estacion", "Estacion")
                        .WithMany("Ventas")
                        .HasForeignKey("EstacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estacion");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Estacion", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Sensores");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Usuario", b =>
                {
                    b.Navigation("AlertasRevisadas");
                });

            modelBuilder.Entity("PetrolriosFraudeDetection.Models.Entities.Venta", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
